{
	"id": "2a1b0f6f5b807e75ba2fafc817beefab",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"ifElse.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.13;\r\n\r\ncontract ifElse{\r\n    uint256 Num1= 4;\r\n    uint256 Num2= 7;\r\n\r\n\r\n    function condition() public view  returns(bool  value) {\r\n        value= true;\r\n        if (Num2<10) {\r\n            return value;\r\n        }else if(Num1 == 10){\r\n                return  false;\r\n        }else{\r\n            return  true;\r\n        }\r\n\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"ifElse.sol": {
				"ifElse": {
					"abi": [
						{
							"inputs": [],
							"name": "condition",
							"outputs": [
								{
									"internalType": "bool",
									"name": "value",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ifElse.sol\":61:389  contract ifElse{... */\n  mstore(0x40, 0x80)\n    /* \"ifElse.sol\":97:98  4 */\n  0x04\n    /* \"ifElse.sol\":83:98  uint256 Num1= 4 */\n  0x00\n  sstore\n    /* \"ifElse.sol\":119:120  7 */\n  0x07\n    /* \"ifElse.sol\":105:120  uint256 Num2= 7 */\n  0x01\n  sstore\n    /* \"ifElse.sol\":61:389  contract ifElse{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ifElse.sol\":61:389  contract ifElse{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc5031331\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ifElse.sol\":131:386  function condition() public view  returns(bool  value) {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"ifElse.sol\":173:184  bool  value */\n      0x00\n        /* \"ifElse.sol\":204:208  true */\n      0x01\n        /* \"ifElse.sol\":197:208  value= true */\n      swap1\n      pop\n        /* \"ifElse.sol\":228:230  10 */\n      0x0a\n        /* \"ifElse.sol\":223:227  Num2 */\n      sload(0x01)\n        /* \"ifElse.sol\":223:230  Num2<10 */\n      lt\n        /* \"ifElse.sol\":247:259  return value */\n      tag_8\n        /* \"ifElse.sol\":219:377  if (Num2<10) {... */\n      jumpi\n        /* \"ifElse.sol\":287:289  10 */\n      0x0a\n        /* \"ifElse.sol\":279:283  Num1 */\n      sload(0x00)\n        /* \"ifElse.sol\":279:289  Num1 == 10 */\n      sub\n        /* \"ifElse.sol\":276:377  if(Num1 == 10){... */\n      tag_11\n      jumpi\n        /* \"ifElse.sol\":317:322  false */\n      0x00\n        /* \"ifElse.sol\":309:322  return  false */\n      swap1\n      pop\n      jump(tag_8)\n        /* \"ifElse.sol\":276:377  if(Num1 == 10){... */\n    tag_11:\n        /* \"ifElse.sol\":361:365  true */\n      0x01\n        /* \"ifElse.sol\":353:365  return  true */\n      swap1\n      pop\n        /* \"ifElse.sol\":131:386  function condition() public view  returns(bool  value) {... */\n    tag_8:\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:97   */\n    tag_13:\n        /* \"#utility.yul\":41:48   */\n      0x00\n        /* \"#utility.yul\":84:89   */\n      dup2\n        /* \"#utility.yul\":77:90   */\n      iszero\n        /* \"#utility.yul\":70:91   */\n      iszero\n        /* \"#utility.yul\":59:91   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:97   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":103:212   */\n    tag_14:\n        /* \"#utility.yul\":184:205   */\n      tag_18\n        /* \"#utility.yul\":199:204   */\n      dup2\n        /* \"#utility.yul\":184:205   */\n      tag_13\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":179:182   */\n      dup3\n        /* \"#utility.yul\":172:206   */\n      mstore\n        /* \"#utility.yul\":103:212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":218:428   */\n    tag_7:\n        /* \"#utility.yul\":305:309   */\n      0x00\n        /* \"#utility.yul\":343:345   */\n      0x20\n        /* \"#utility.yul\":332:341   */\n      dup3\n        /* \"#utility.yul\":328:346   */\n      add\n        /* \"#utility.yul\":320:346   */\n      swap1\n      pop\n        /* \"#utility.yul\":356:421   */\n      tag_20\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":407:416   */\n      dup4\n        /* \"#utility.yul\":403:420   */\n      add\n        /* \"#utility.yul\":394:400   */\n      dup5\n        /* \"#utility.yul\":356:421   */\n      tag_14\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":218:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ba4f0ca2c903f8194ef2cd9c3ff670eee2d2461bc28b9801772af7a31759672d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260045f5560076001553480156017575f80fd5b5060ce8060235f395ff3fe6080604052348015600e575f80fd5b50600436106026575f3560e01c8063c503133114602a575b5f80fd5b60306044565b604051603b91906081565b60405180910390f35b5f60019050600a60015410606657600a5f54036061575f90506066565b600190505b90565b5f8115159050919050565b607b816069565b82525050565b5f60208201905060925f8301846074565b9291505056fea2646970667358221220ba4f0ca2c903f8194ef2cd9c3ff670eee2d2461bc28b9801772af7a31759672d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 PUSH0 SSTORE PUSH1 0x7 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH1 0x17 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xCE DUP1 PUSH1 0x23 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC5031331 EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x30 PUSH1 0x44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3B SWAP2 SWAP1 PUSH1 0x81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP PUSH1 0xA PUSH1 0x1 SLOAD LT PUSH1 0x66 JUMPI PUSH1 0xA PUSH0 SLOAD SUB PUSH1 0x61 JUMPI PUSH0 SWAP1 POP PUSH1 0x66 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7B DUP2 PUSH1 0x69 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x92 PUSH0 DUP4 ADD DUP5 PUSH1 0x74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0x4F 0xC LOG2 0xC9 SUB 0xF8 NOT 0x4E CALLCODE 0xCD SWAP13 EXTCODEHASH 0xF6 PUSH17 0xEEE2D2461BC28B9801772AF7A31759672D PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "61:328:0:-:0;;;97:1;83:15;;119:1;105:15;;61:328;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@condition_34": {
									"entryPoint": 68,
									"id": 34,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:431:1",
										"nodeType": "YulBlock",
										"src": "0:431:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "49:48:1",
													"nodeType": "YulBlock",
													"src": "49:48:1",
													"statements": [
														{
															"nativeSrc": "59:32:1",
															"nodeType": "YulAssignment",
															"src": "59:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "84:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "84:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "77:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "77:6:1"
																		},
																		"nativeSrc": "77:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "77:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "70:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "70:6:1"
																},
																"nativeSrc": "70:21:1",
																"nodeType": "YulFunctionCall",
																"src": "70:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "59:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "59:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "31:5:1",
														"nodeType": "YulTypedName",
														"src": "31:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "41:7:1",
														"nodeType": "YulTypedName",
														"src": "41:7:1",
														"type": ""
													}
												],
												"src": "7:90:1"
											},
											{
												"body": {
													"nativeSrc": "162:50:1",
													"nodeType": "YulBlock",
													"src": "162:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "179:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "179:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "199:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "199:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "184:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "184:14:1"
																		},
																		"nativeSrc": "184:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "184:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "172:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:1"
																},
																"nativeSrc": "172:34:1",
																"nodeType": "YulFunctionCall",
																"src": "172:34:1"
															},
															"nativeSrc": "172:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "172:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "103:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "150:5:1",
														"nodeType": "YulTypedName",
														"src": "150:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "157:3:1",
														"nodeType": "YulTypedName",
														"src": "157:3:1",
														"type": ""
													}
												],
												"src": "103:109:1"
											},
											{
												"body": {
													"nativeSrc": "310:118:1",
													"nodeType": "YulBlock",
													"src": "310:118:1",
													"statements": [
														{
															"nativeSrc": "320:26:1",
															"nodeType": "YulAssignment",
															"src": "320:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "332:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "332:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "343:2:1",
																		"nodeType": "YulLiteral",
																		"src": "343:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "328:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:1"
																},
																"nativeSrc": "328:18:1",
																"nodeType": "YulFunctionCall",
																"src": "328:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "320:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "320:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "394:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "394:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "407:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "407:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "418:1:1",
																				"nodeType": "YulLiteral",
																				"src": "418:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "403:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:1"
																		},
																		"nativeSrc": "403:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "403:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "356:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "356:37:1"
																},
																"nativeSrc": "356:65:1",
																"nodeType": "YulFunctionCall",
																"src": "356:65:1"
															},
															"nativeSrc": "356:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "356:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "218:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "282:9:1",
														"nodeType": "YulTypedName",
														"src": "282:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "294:6:1",
														"nodeType": "YulTypedName",
														"src": "294:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "305:4:1",
														"nodeType": "YulTypedName",
														"src": "305:4:1",
														"type": ""
													}
												],
												"src": "218:210:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50600436106026575f3560e01c8063c503133114602a575b5f80fd5b60306044565b604051603b91906081565b60405180910390f35b5f60019050600a60015410606657600a5f54036061575f90506066565b600190505b90565b5f8115159050919050565b607b816069565b82525050565b5f60208201905060925f8301846074565b9291505056fea2646970667358221220ba4f0ca2c903f8194ef2cd9c3ff670eee2d2461bc28b9801772af7a31759672d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC5031331 EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x30 PUSH1 0x44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3B SWAP2 SWAP1 PUSH1 0x81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP PUSH1 0xA PUSH1 0x1 SLOAD LT PUSH1 0x66 JUMPI PUSH1 0xA PUSH0 SLOAD SUB PUSH1 0x61 JUMPI PUSH0 SWAP1 POP PUSH1 0x66 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7B DUP2 PUSH1 0x69 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x92 PUSH0 DUP4 ADD DUP5 PUSH1 0x74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0x4F 0xC LOG2 0xC9 SUB 0xF8 NOT 0x4E CALLCODE 0xCD SWAP13 EXTCODEHASH 0xF6 PUSH17 0xEEE2D2461BC28B9801772AF7A31759672D PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "61:328:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;131:255;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;173:11;204:4;197:11;;228:2;223:4;;:7;247:12;219:158;287:2;279:4;;:10;276:101;;317:5;309:13;;;;276:101;361:4;353:12;;131:255;;:::o;7:90:1:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "41200",
								"executionCost": "44302",
								"totalCost": "85502"
							},
							"external": {
								"condition()": "4578"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 389,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 389,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 389,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 97,
									"end": 98,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 83,
									"end": 98,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 83,
									"end": 98,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 119,
									"end": 120,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 105,
									"end": 120,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 105,
									"end": 120,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 389,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 389,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 389,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 61,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 389,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 61,
									"end": 389,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 389,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 389,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 61,
									"end": 389,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 389,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61,
									"end": 389,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 61,
									"end": 389,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 389,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 389,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 389,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 389,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 61,
									"end": 389,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 389,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ba4f0ca2c903f8194ef2cd9c3ff670eee2d2461bc28b9801772af7a31759672d64736f6c634300081a0033",
									".code": [
										{
											"begin": 61,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 389,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 389,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 389,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 389,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 389,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 389,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 389,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 389,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 61,
											"end": 389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "C5031331"
										},
										{
											"begin": 61,
											"end": 389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 389,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 389,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 131,
											"end": 386,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 131,
											"end": 386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 131,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 131,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 131,
											"end": 386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 131,
											"end": 386,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 131,
											"end": 386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 131,
											"end": 386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 131,
											"end": 386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 131,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 131,
											"end": 386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 131,
											"end": 386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 131,
											"end": 386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 131,
											"end": 386,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 131,
											"end": 386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 131,
											"end": 386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 131,
											"end": 386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 131,
											"end": 386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 131,
											"end": 386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 131,
											"end": 386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 386,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 131,
											"end": 386,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 131,
											"end": 386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 173,
											"end": 184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 208,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 197,
											"end": 208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 208,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 228,
											"end": 230,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 223,
											"end": 227,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 223,
											"end": 227,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 230,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 219,
											"end": 377,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 287,
											"end": 289,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 279,
											"end": 283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 283,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 279,
											"end": 289,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 276,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 276,
											"end": 377,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 317,
											"end": 322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 309,
											"end": 322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 309,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 309,
											"end": 322,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 276,
											"end": 377,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 276,
											"end": 377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 361,
											"end": 365,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 353,
											"end": 365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 353,
											"end": 365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 131,
											"end": 386,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 131,
											"end": 386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 131,
											"end": 386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 97,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 7,
											"end": 97,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 41,
											"end": 48,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 77,
											"end": 90,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 70,
											"end": 91,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 103,
											"end": 212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 199,
											"end": 204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 184,
											"end": 205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 179,
											"end": 182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 172,
											"end": 206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 218,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 305,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 328,
											"end": 346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 403,
											"end": 420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 356,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"ifElse.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"condition()": "c5031331"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"condition\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ifElse.sol\":\"ifElse\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ifElse.sol\":{\"keccak256\":\"0x41e3bfe5b9f15016fe8ea03776b402d2bb494900e85857f76cc9666a4b27d20e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ab375760edfb41df32e27ccc76a8890948cd03addedec1bfc98332a5210bdc3\",\"dweb:/ipfs/QmUBWa2nG5scDJsxUK3FMSNYs8GAFbo31S9LGttpPaFbBM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "ifElse.sol:ifElse",
								"label": "Num1",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "ifElse.sol:ifElse",
								"label": "Num2",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ifElse.sol": {
				"ast": {
					"absolutePath": "ifElse.sol",
					"exportedSymbols": {
						"ifElse": [
							35
						]
					},
					"id": 36,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ifElse",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 35,
							"linearizedBaseContracts": [
								35
							],
							"name": "ifElse",
							"nameLocation": "70:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "Num1",
									"nameLocation": "91:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 35,
									"src": "83:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "83:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "97:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "Num2",
									"nameLocation": "113:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 35,
									"src": "105:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 5,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "105:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "37",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "119:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_7_by_1",
											"typeString": "int_const 7"
										},
										"value": "7"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "186:200:0",
										"statements": [
											{
												"expression": {
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 12,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "197:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "204:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "197:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "197:11:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 16,
														"name": "Num2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "223:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "228:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 24,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 22,
															"name": "Num1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "279:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "3130",
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "287:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"src": "279:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 30,
														"nodeType": "Block",
														"src": "338:39:0",
														"statements": [
															{
																"expression": {
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "361:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"functionReturnParameters": 11,
																"id": 29,
																"nodeType": "Return",
																"src": "353:12:0"
															}
														]
													},
													"id": 31,
													"nodeType": "IfStatement",
													"src": "276:101:0",
													"trueBody": {
														"id": 27,
														"nodeType": "Block",
														"src": "290:44:0",
														"statements": [
															{
																"expression": {
																	"hexValue": "66616c7365",
																	"id": 25,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "317:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"functionReturnParameters": 11,
																"id": 26,
																"nodeType": "Return",
																"src": "309:13:0"
															}
														]
													}
												},
												"id": 32,
												"nodeType": "IfStatement",
												"src": "219:158:0",
												"trueBody": {
													"id": 21,
													"nodeType": "Block",
													"src": "232:39:0",
													"statements": [
														{
															"expression": {
																"id": 19,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "254:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"functionReturnParameters": 11,
															"id": 20,
															"nodeType": "Return",
															"src": "247:12:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "c5031331",
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "condition",
									"nameLocation": "140:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "149:2:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "179:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "173:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "173:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "172:13:0"
									},
									"scope": 35,
									"src": "131:255:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 36,
							"src": "61:328:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:356:0"
				},
				"id": 0
			}
		}
	}
}